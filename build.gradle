plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.4-SNAPSHOT" apply false
}

architectury {
    minecraft = minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base {
        archivesName = "${mod_id}"
    }

    group = project.group

    repositories {
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        //noinspection GroovyAssignabilityCheck, GroovyAccessibility
        options.release = 17
    }

    java {
        withSourcesJar()
    }

    processResources {
        def expandProps = [
                "mod_id"                       : mod_id,
                "mod_name"                     : mod_name,
                "mod_version"                  : mod_version,
                "mod_author"                   : mod_author,
                "mod_description"              : mod_description,
                "group"                        : project.group,
                "archives_base_name"           : archives_base_name,
                "license"                      : license,
                "enabled_platforms"            : enabled_platforms,
                "minecraft_version"            : minecraft_version,
                "parchment_version"            : parchment_version,
                "fabric_loader_version"        : fabric_loader_version,
                "fabric_api_version"           : fabric_api_version,
                "forge_version"                : forge_version,
                "forge_version_range"          : forge_version_range,
                "minecraft_version_range"      : minecraft_version_range
        ]

        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/mods.toml', '*.mixins.json']) {
            expand expandProps
        }
        inputs.properties(expandProps)
    }
}
